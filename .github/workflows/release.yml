name: Create release

on:
  push:
    tags:
    - "v*.*.*"
  workflow_dispatch:


permissions:
  contents: write

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.63.4

  semgrep:
    name: sast
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install Semgrep
      run: |
        python -m pip install --upgrade pip
        pip install semgrep

    - name: Run Semgrep scan
      run: semgrep scan --config=p/gosec --disable-version-check --oss-only --metrics=off --verbose .

  goreleaser:
    runs-on: ubuntu-latest
    needs:
    - golangci
    - semgrep
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch full history including tags

    - name: Get the Latest Git Tag
      run: |
        TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$TAG" ]; then
          echo "No tag found! Stopping workflow."
          exit 1
        fi
        echo "GIT_TAG=$TAG" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.6'

    - name: Test with the Go CLI
      run: go test ./...

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: ${{ env.GITHUB_REF_NAME }}
        args: release --clean
        workdir: ./
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Send repo dispatch event
      run: |+
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${TARGET_REPO_TOKEN}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${TARGET_REPO}/dispatches \
          -d '{"event_type":"trigger-gift-wrap","client_payload":{"integration":true,"version":"'"${GIT_TAG}"'"}}'

      env:
        TARGET_REPO: ${{ secrets.TARGET_REPO }}
        TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
